#!/usr/bin/env python3

import sys

import game_utils
import graph_utils


def player_1_selection(board):

    cities_names = list(board.get_nodes())
    cities_names = sorted(cities_names, key=lambda x: len(x))

    return cities_names


def player_2_selection(board):

    cities_names = list(board.get_nodes())
    cities_names = sorted(cities_names, key=lambda x: len(x), reverse=True)

    return cities_names


def print_cities(player_no, cities_names):

    filename = game_utils.get_selection_filename(player_no)

    text = '\n'.join(cities_names)
    with open(filename, "w+") as file:
        file.write(text)


def resolve_cities(player_no, board, cities):

    if player_no == 1:
        return player_1_selection(board)
    elif player_no == 2:
        return player_2_selection(board)


def main():

    player_no = int(sys.argv[1])
    cities_filename = sys.argv[2]
    routes_filename = sys.argv[3]

    board, cities = game_utils.load_empty_board(cities_filename, routes_filename)

    chosen = resolve_cities(player_no, board, cities)
    assert len(set(chosen)) == len(cities), '{} \n {}'.format(chosen, cities)
    print_cities(player_no, chosen)


if __name__ == '__main__':
    main()
